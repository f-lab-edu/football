# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CD with Gradle

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # java 11 설치
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      # gradlew 에 대한 권한 설정(?)
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # Build 진행
      - name: Build with Gradle
        run: ./gradlew clean build

      # 디렉토리 생성
      - name: Make Directory
        run: mkdir -p football

      # Api 서버 Jar 파일 복사
      - name: Copy Jar
        run: cp ./football-api-server/build/libs/*.jar ./football

      # Websocket Jar 파일 복사
      - name: Copy Jar
        run: cp ./football-websocket-server/build/libs/*.jar ./football

      - name: Deliver File
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.WC_SSH_HOST }} # IP = 3.39.254.213
          username: ${{ secrets.WC_SSH_USERNAME }} # user name = ubuntu?
          key: ${{ secrets.SSH_KEY }} # private key
          port: ${{ secrets.SSH_PORT }} # port = 22
          source: "./football"
          target: "source"
          rm: true

      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.WC_SSH_HOST }} # IP = 3.39.254.213
          username: ${{ secrets.WC_SSH_USERNAME }} # user name = ubuntu?
          key: ${{ secrets.SSH_KEY }} # private key
          port: ${{ secrets.SSH_PORT }} # port = 22
          script: |
#            SOURCE_DIR=source/build/libs
#            FILE_NAME=`find $SOURCE_DIR/*.jar -printf "%f\n"`
#            PID=`ps -ef | grep occupying | grep sudo | grep -v "bash -c" | awk '{print $2}'`
#
#            if [ -z "$PID" ]; then
#                    echo "#### THERE IS NO PROCESS ####"
#            else
#                    echo "#### KILL $PID ####"
#                    sudo kill $PID
#            fi
#
#            echo "#### RUN $SOURCE_DIR/$FILE_NAME ####"
#
#            sudo java -jar $SOURCE_DIR/$FILE_NAME > /dev/null 2>&1 &
